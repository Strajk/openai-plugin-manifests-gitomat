openapi: 3.1
info:
  title: Clinical Trial Radar
  description: >-
    Clinical trial discovery tool for patients, caregivers, HCPs & Biotech pros.
  version: v1
servers:
  - url: 'https://trialradar3.marketflare.repl.co'
paths:
  /studies:
    get:
      summary: "Studies"
      description: "Returns data of studies matching query and filter parameters. Studies are returned page by page. If response contains `nextPageToken`, use its value in `pageToken` to get next page. The last page will not contain `nextPageToken`. "
      tags:
      - "Studies"
      operationId: "listStudies"
      parameters:
      - name: "format"
        in: "query"
        description: "Select format: csv for paginated CSV data (header with column names on first page; json for paginated JSON data (each study object on a new line; markup type fields in markdown. Use JSON data only."
        required: false
        schema:
          type: "string"
          enum:
          - "csv"
          - "json"
          default: "json"
      - name: "query.parser"
        in: "query"
        description: "Parser for a user query:\n* `advanced` - recognizing full [Essie\
          \ expression syntax](https://classic.clinicaltrials.gov/api/gui/ref/syntax)\n\
          * `simple` - recognizing synonyms and phrases"
        required: false
        schema:
          type: "string"
          enum:
          - "advanced"
          - "simple"
          default: "advanced"
      - name: "query.cond"
        in: "query"
        description: "\"Conditions or disease\" query. See \"ConditionSearch Area\"\
          \ on [Search Areas](/search-areas#ConditionSearch) for more details."
        required: false
        schema:
          type: "string"
        examples:
          example1:
            value: "lung cancer"
          example2:
            value: "(head OR neck) AND pain"
      - name: "query.term"
        in: "query"
        description: "\"Other terms\" query. See \"BasicSearch Area\" on [Search Areas](/search-areas#BasicSearch)\
          \ for more details."
        required: false
        schema:
          type: "string"
        examples:
          example1:
            value: "AREA[LastUpdatePostDate]RANGE[2023-01-15,MAX]"
      - name: "query.locn"
        in: "query"
        description: "\"Location terms\" query. See \"LocationSearch Area\" on [Search\
          \ Areas](/search-areas#LocationSearch) for more details."
        required: false
        schema:
          type: "string"
      - name: "query.titles"
        in: "query"
        description: "\"Title / acronym\" query. See \"TitleSearch Area\" on [Search\
          \ Areas](/search-areas#TitleSearch) for more details."
        required: false
        schema:
          type: "string"
      - name: "query.intr"
        in: "query"
        description: "\"Intervention / treatment\" query. See \"InterventionSearch\
          \ Area\" on [Search Areas](/search-areas#InterventionSearch) for more details."
        required: false
        schema:
          type: "string"
      - name: "query.outc"
        in: "query"
        description: "\"Outcome measure\" query. See \"OutcomeSearch Area\" on [Search\
          \ Areas](/search-areas#OutcomeSearch) for more details."
        required: false
        schema:
          type: "string"
      - name: "query.spons"
        in: "query"
        description: "\"Sponsor / collaborator\" query. See \"SponsorSearch Area\"\
          \ on [Search Areas](/search-areas#SponsorSearch) for more details."
        required: false
        schema:
          type: "string"
      - name: "query.lead"
        in: "query"
        description: "Searches in \"LeadSponsorName\" field. See [Study Data Structure](/study-data-structure#LeadSponsorName)\
          \ for more details."
        required: false
        schema:
          type: "string"
      - name: "query.id"
        in: "query"
        description: "\"Study IDs\" query. See \"IdSearch Area\" on [Search Areas](/search-areas#IdSearch)\
          \ for more details."
        required: false
        schema:
          type: "string"
      - name: "query.patient"
        in: "query"
        description: "See \"PatientSearch Area\" on [Search Areas](/search-areas#PatientSearch)\
          \ for more details."
        required: false
        schema:
          type: "string"
      - name: "filter.overallStatus"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated string of statuses"
        required: false
        schema:
          type: "string"
          items:
            $ref: "#/components/study/Status"
        examples:
          example1:
            value:
            - "NOT_YET_RECRUITING"
            - "RECRUITING"
          example2:
            value:
            - "COMPLETED"
      - name: "filter.geo"
        in: "query"
        description: "Filter by geo-function. Currently only distance function is\
          \ supported.\nFormat: `distance(latitude,longitude,distance)`"
        required: false
        schema:
          type: "string"
          pattern: "^distance\\(-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?,\\d+(km|mi)?\\)$"
        examples:
          example1:
            value: "distance(39.0035707,-77.1013313,50mi)"
      - name: "filter.ids"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated list (in a string) of NCT numbers (a.k.a. ClinicalTrials.gov\
          \ identifiers)"
        required: false
        schema:
          type: "array"
          items:
            type: "string"
            pattern: "^(NCT|nct)\\d{8}$"
        examples:
          example1:
            value:
            - "NCT04852770"
      - name: "filter.advanced"
        in: "query"
        description: "Filter by query in [Essie expression syntax](https://classic.clinicaltrials.gov/api/gui/ref/syntax)"
        required: false
        schema:
          type: "string"
        examples:
          example1:
            value: "AREA[StartDate]2022"
          example2:
            value: "AREA[MinimumAge]RANGE[MIN, 16 years] AND AREA[MaximumAge]RANGE[16\
              \ years, MAX]"
      - name: "filter.synonyms"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated list (in a string) of `area`:`synonym_id` pairs"
        required: false
        schema:
          type: "array"
          items:
            type: "string"
        examples:
          example1:
            value:
            - "ConditionSearch:1651367"
            - "BasicSearch:2013558"
      - name: "postFilter.overallStatus"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated list (in a string) of statuses"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/components/study/Status"
        examples:
          example1:
            value:
            - "NOT_YET_RECRUITING"
            - "RECRUITING"
          example2:
            value:
            - "COMPLETED"
      - name: "postFilter.geo"
        in: "query"
        description: "Filter by geo-function. Currently only distance function is\
          \ supported.\nFormat: `distance(latitude,longitude,distance)`"
        required: false
        schema:
          type: "string"
          pattern: "^distance\\(-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?,\\d+(km|mi)?\\)$"
        examples:
          example1:
            value: "distance(39.0035707,-77.1013313,50mi)"
      - name: "postFilter.ids"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated list (in a string) of NCT numbers (a.k.a. ClinicalTrials.gov\
          \ identifiers)"
        required: false
        schema:
          type: "array"
          items:
            type: "string"
            pattern: "^(NCT|nct)\\d{8}$"
        examples:
          example1:
            value:
            - "NCT04852770"
      - name: "postFilter.advanced"
        in: "query"
        description: "Filter by query in [Essie expression syntax](https://classic.clinicaltrials.gov/api/gui/ref/syntax)"
        required: false
        schema:
          type: "string"
        examples:
          example1:
            value: "AREA[StartDate]2022"
          example2:
            value: "AREA[MinimumAge]RANGE[MIN, 16 years] AND AREA[MaximumAge]RANGE[16\
              \ years, MAX]"
      - name: "postFilter.synonyms"
        in: "query"
        style: "simple"
        explode: false
        description: "Filter by comma-separated list (in a string) of `area`:`synonym_id` pairs"
        required: false
        schema:
          type: "array"
          items:
            type: "string"
        examples:
          example1:
            value:
            - "ConditionSearch:1651367"
            - "BasicSearch:2013558"
      - name: "aggFilters"
        in: "query"
        description: "Apply aggregation filters, aggregation counts will not be provided.\n\
          The value is comma-separated list (in a string) of pairs `filter_id`:`space-separated\
          \ list of option keys` for the checked options."
        required: false
        schema:
          type: "string"
        examples:
          example1:
            value: "results:with,status:com"
          example2:
            value: "status:not rec,sex:f,healthy:y"
      - name: "geoDecay"
        in: "query"
        description: "Set proximity factor by distance from `filter.geo` location\
          \ to the closest [LocationGeoPoint](/study-data-structure#LocationGeoPoint)\
          \ of a study.\nIgnored, if `filter.geo` parameter is not set or response\
          \ contains more than 10,000 studies."
        required: false
        schema:
          type: "string"
          pattern: "^func:(gauss|exp|linear),scale:(\\d+(\\.\\d+)?(km|mi)),offset:(\\\
            d+(\\.\\d+)?(km|mi)),decay:(\\d+(\\.\\d+)?)$"
          default: "func:exp,scale:300mi,offset:0mi,decay:0.5"
        examples:
          example1:
            value: "func:linear,scale:100km,offset:10km,decay:0.1"
          example2:
            value: "func:gauss,scale:500mi,offset:0mi,decay:0.3"
      - name: "fields"
        in: "query"
        style: "simple"
        explode: false
        description: "If specified, must be non-empty comma-separated list (in a string) of fields to return. If unspecified, all fields will be returned. Order of the fields does not matter. For `json` formats, every list item is either area name, piece name, field name, or special name. If a piece or a field is a branch node, all descendant fields will be included. All area names are available on [Search Areas](/search-areas), the piece and field names — on [Data Structure](/study-data-structure) and also can be retrieved at `/studies/metadata` endpoint. There is a special name, `@query`, which expands to all fields queried by search."
        required: false
        schema:
          type: "array"
          minItems: 1
          items:
            type: "string"
            pattern: "^([a-zA-Z][a-zA-Z0-9\\-. ]*)|(@query)$"
        examples:
          example1:
            value:
            - "NCTId"
            - "BriefTitle"
            - "OverallStatus"
            - "HasResults"
          example2:
            value: "ProtocolSection"
      - name: "sort"
        in: "query"
        style: "simple"
        explode: false
        description: "comma-separated list (in a string) of sorting options of the studies. The returning studies are not sorted by default for a performance reason.\n Every list item contains a field/piece name and an optional sort direction (`asc` or `desc`)\nafter colon character.\n \nAll piece and field names can be found on [Data Structure](/study-data-structure) and also can be retrieved\nat `/studies/metadata` endpoint. Currently, only date and numeric fields are allowed for sorting.\nThere is a special \"field\" `@relevance` to sort by relevance to a search query.\n\nStudies missing sort field are always last. Default sort direction:\n* Date field - `desc`\n* Numeric field - `asc`\n* `@relevance` - `desc`"
        required: false
        schema:
          type: "array"
          maxItems: 2
          default: []
          items:
            type: "string"
            pattern: "^(([a-zA-Z][a-zA-Z0-9\\-. ]*)|(@relevance))(:(asc|desc))?$"
        examples:
          example1:
            value:
            - "@relevance"
          example2:
            value:
            - "LastUpdatePostDate:desc"
          example3:
            value:
            - "EnrollmentCount:desc"
            - "NumArmGroups"
      - name: "countTotal"
        in: "query"
        description: "Count total number of studies and return `totalCount` field in the JSON response\
          \ with first page, if `true`.\nFor CSV, the result can be found in `x-total-count`\
          \ response header.\nThe parameter is ignored for the subsequent pages."
        required: false
        schema:
          type: "boolean"
          default: false
      - name: "pageSize"
        in: "query"
        description: "Page size is maximum number of studies to return in response.\
          \ It does not have to be the same for every page.\nIf not specified or set\
          \ to 0, the default value will be used. It will be coerced down to  1,000,\
          \ if greater than that."
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 0
          default: 10
        examples:
          example1:
            value: 2
          example2:
            value: 100
      - name: "pageToken"
        in: "query"
        description: "Token to get next page. Set it to a `nextPageToken` value returned\
          \ with the previous page in JSON format.\nFor CSV, it can be found in `x-next-page-token`\
          \ response header.\nDo not specify it for first page."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedStudies"
              example:
                totalCount: 438897
                studies:
                - protocolSection:
                    identificationModule:
                      nctId: "NCT03540771"
                      briefTitle: "Introducing Palliative Care (PC) Within the Treatment\
                        \ of End Stage Liver Disease (ESLD)"
                    statusModule:
                      overallStatus: "RECRUITING"
                  hasResults: false
                - protocolSection:
                    identificationModule:
                      nctId: "NCT03630471"
                      briefTitle: "Effectiveness of a Problem-solving Intervention\
                        \ for Common Adolescent Mental Health Problems in India"
                    statusModule:
                      overallStatus: "COMPLETED"
                  hasResults: false
                - protocolSection:
                    identificationModule:
                      nctId: "NCT00587795"
                      briefTitle: "Orthopedic Study of the Aircast StabilAir Wrist\
                        \ Fracture Brace"
                    statusModule:
                      overallStatus: "TERMINATED"
                  hasResults: true
                nextPageToken: "abracadabra"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /studies/{nctId}:
    get:
      summary: "Single Study"
      description: "Returns data of a single study."
      tags:
      - "Studies"
      operationId: "fetchStudy"
      parameters:
      - name: "nctId"
        in: "path"
        description: "NCT Number of a study"
        required: true
        schema:
          type: "string"
          pattern: "^(NCT|nct)\\d{8}$"
        examples:
          example1:
            value: "NCT00841061"
          example2:
            value: "NCT04000165"
      - name: "format"
        in: "query"
        description: "Must be one of the following:\n* `csv`- return CSV table; available\
          \ fields are listed on [CSV Download](/csv-download)\n* `json`- return JSON\
          \ object; field values of type `markup` are in [markdown](https://spec.commonmark.org/0.28/)\
          \ format\n* `json.zip`- put JSON object into a .json file and download it\
          \ as zip archive; field values of type `markup` are in [markdown](https://spec.commonmark.org/0.28/)\
          \ format"
        required: false
        schema:
          type: "string"
          enum:
          - "csv"
          - "json"
          - "json.zip"
          default: "json"
      - name: "fields"
        in: "query"
        style: "simple"
        explode: false
        description: "If specified, must be non-empty comma-separated list (in a string) of fields to return. If unspecified, all fields will be returned.\n Order of the fields does not matter.\n\nFor `csv` format, specify list of columns. The column names are available on [CSV Download](/csv-download).\n\nFor `json` and `json.zip` formats, every list item is either area name, piece name, or field name.\nIf a piece or a field is a branch node, all descendant fields will be included.\nAll area names are available on [Search Areas](/search-areas),\nthe piece and field names - on [Data Structure](/study-data-structure) and also can be retrieved at `/studies/metadata` endpoint."
        required: false
        schema:
          type: "array"
          minItems: 1
          items:
            type: "string"
            pattern: "^[a-zA-Z][a-zA-Z0-9\\-. ]*$"
        examples:
          example1:
            value:
            - "NCTId"
            - "BriefTitle"
            - "Reference"
          example2:
            value:
            - "ConditionsModule"
            - "EligibilityModule"
      responses:
        "200":
          description: "OK"
          content:
            text/csv:
              schema:
                $ref: "#/components/shared/StudiesCsv"
            application/json:
              schema:
                $ref: "#/components/study/Study"
            application/zip:
              schema:
                $ref: "#/components/shared/StudiesZip"
            application/fhir+json:
              schema:
                $ref: "#/components/shared/StudyFhir"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
        "404":
          description: "Not found"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /studies/metadata:
    get:
      summary: "Data Model Fields"
      description: "Returns study data model fields."
      tags:
      - "Studies"
      operationId: "studiesMetadata"
      parameters:
      - name: "includeIndexedOnly"
        in: "query"
        description: "Include indexed-only fields, if `true`"
        required: false
        schema:
          type: "boolean"
          default: false
      - name: "includeHistoricOnly"
        in: "query"
        description: "Include fields available only in historic data, if `true`"
        required: false
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FieldNodeList"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /stats/size:
    get:
      summary: "Study Sizes"
      description: "Statistics of study JSON sizes."
      tags:
      - "Stats"
      operationId: "sizeStats"
      parameters: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GzipStats"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /stats/fieldValues:
    get:
      summary: "Values Stats"
      description: "Value statistics of the study leaf fields."
      tags:
      - "Stats"
      operationId: "fieldValuesSummary"
      parameters:
      - name: "types"
        in: "query"
        style: "simple"
        explode: false
        description: ""
        required: false
        schema:
          type: "array"
          default: []
          items:
            $ref: "#/components/schemas/FieldStatsType"
        examples:
          example1:
            value:
            - "ENUM"
            - "BOOLEAN"
          example2:
            value:
            - "INTEGER"
            - "NUMBER"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/shared/FieldValuesStatsList"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
        "404":
          description: "Not found"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /stats/fieldValues/{field}:
    get:
      summary: "Field Values Stats"
      description: "Value statistics of a single study leaf field."
      tags:
      - "Stats"
      operationId: "fieldValuesStats"
      parameters:
      - name: "field"
        in: "path"
        description: "Piece name or field path. See [Data Structure](/study-data-structure)\
          \ for the available values."
        required: true
        schema:
          type: "string"
          pattern: "^[a-zA-Z][a-zA-Z0-9\\-. ]*$"
          minLength: 1
        examples:
          example1:
            value: "Condition"
          example2:
            value: "Phase"
          example3:
            value: "protocolSection.armsInterventionsModule.armGroups.interventionNames"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/shared/FieldValuesStats"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
        "404":
          description: "Not found"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /stats/listSizes:
    get:
      summary: "List Sizes"
      description: "Sizes of all list/array fields.\n\nTo search studies by a list\
        \ field size, use `AREA[FieldName:size]` search operator.\nFor example, [AREA\\\
        [Phase:size\\] 2](https://beta.clinicaltrials.gov/search?term=AREA%5BPhase:size%5D%202)\n\
        query finds studies with 2 phases."
      tags:
      - "Stats"
      operationId: "listSizesSummary"
      parameters: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSizesList"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
        "404":
          description: "Not found"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /stats/listSizes/{field}:
    get:
      summary: "List Field Sizes"
      description: "Sizes of list/array field.\n\nTo search studies by a list field\
        \ size, use `AREA[FieldName:size]` search operator.\nFor example, [AREA\\\
        [SubmissionInfo:size\\] 15](https://beta.clinicaltrials.gov/search?term=AREA%5BSubmissionInfo:size%5D%2015)\n\
        query finds studies where SubmissionInfo list size is 15."
      tags:
      - "Stats"
      operationId: "listSizes"
      parameters:
      - name: "field"
        in: "path"
        description: "Piece name or field path. See [Data Structure](/study-data-structure)\
          \ for the available values."
        required: true
        schema:
          type: "string"
          pattern: "^[a-zA-Z][a-zA-Z0-9\\-. ]*$"
          minLength: 1
        examples:
          example1:
            value: "Condition"
          example2:
            value: "Phase"
          example3:
            value: "protocolSection.armsInterventionsModule.armGroups.interventionNames"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSizes"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
        "404":
          description: "Not found"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
  /version:
    get:
      summary: "Version"
      description: "API and data versions.\n\nAPI version follows [Semantic Versioning\
        \ 2.0.0 Schema](https://semver.org/spec/v2.0.0.html).\nData version is UTC\
        \ timestamp in `yyyy-MM-dd'T'HH:mm:ss` format."
      tags:
      - "Version"
      operationId: "version"
      parameters: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                $ref: "#/components/shared/errorMessage"
components:
  schemas:
    SearchResult:
      type: "object"
      properties:
        aggFilters:
          type: "array"
          items:
            $ref: "#/components/schemas/AggFilter"
        aggs:
          type: "object"
        from:
          type: "integer"
          format: "int32"
        hits:
          type: "array"
          items:
            $ref: "#/components/schemas/SearchHit"
        limit:
          type: "integer"
          format: "int32"
        profileResults:
          $ref: "#/components/schemas/ProfileResults"
        signals:
          $ref: "#/components/schemas/SearchSignals"
        suggestion:
          $ref: "#/components/schemas/SuggestedSearch"
        total:
          type: "integer"
          format: "int64"
      required:
      - "from"
      - "hits"
      - "limit"
      - "total"
      additionalProperties: false
    AggFilter:
      type: "object"
      properties:
        id:
          type: "string"
        options:
          type: "array"
          items:
            $ref: "#/components/schemas/AggFilterOption"
        type:
          $ref: "#/components/schemas/FilterType"
      required:
      - "id"
      - "options"
      - "type"
      additionalProperties: false
    AggFilterOption:
      type: "object"
      properties:
        checked:
          type: "boolean"
        count:
          type: "integer"
          format: "int64"
        key:
          type: "string"
        parentKey:
          type: "string"
      required:
      - "checked"
      - "count"
      - "key"
      additionalProperties: false
    FilterType:
      type: "string"
      enum:
      - "MULTIPLE_SELECTION"
      - "SINGLE_SELECTION"
    SearchHit:
      type: "object"
      properties:
        columns:
          $ref: "#/components/shared/StudyColumns"
        explanation:
          $ref: "#/components/shared/Explanation"
        extraHighlights:
          $ref: "#/components/shared/ExtraHighlights"
        id:
          type: "string"
        isNew:
          type: "boolean"
        score:
          type: "number"
          format: "double"
        study:
          $ref: "#/components/study/Study"
      required:
      - "id"
      - "isNew"
      additionalProperties: false
    ProfileResults:
      type: "object"
      properties:
        aggLuceneQuery:
          type: "string"
        aggTime:
          type: "string"
        elasticRequestTime:
          type: "string"
        elasticTookTime:
          type: "string"
        luceneQuery:
          type: "string"
        postProcessTime:
          type: "string"
        preProcessTime:
          type: "string"
        topQueryTime:
          type: "string"
      required:
      - "elasticRequestTime"
      - "elasticTookTime"
      - "postProcessTime"
      - "preProcessTime"
      additionalProperties: false
    SearchSignals:
      type: "object"
      properties:
        covid19:
          type: "boolean"
        stemCell:
          type: "boolean"
      required: []
      additionalProperties: false
    SuggestedSearch:
      type: "object"
      properties:
        cond:
          $ref: "#/components/schemas/SuggestedQuery"
        term:
          $ref: "#/components/schemas/SuggestedQuery"
      required: []
      additionalProperties: false
    SuggestedQuery:
      type: "object"
      properties:
        input:
          type: "string"
        output:
          type: "string"
        outputHtml:
          type: "string"
      required:
      - "input"
      - "output"
      - "outputHtml"
      additionalProperties: false
    SearchResultList:
      type: "array"
      items:
        $ref: "#/components/schemas/SearchResult"
    HistorySummary:
      type: "object"
      properties:
        changes:
          type: "array"
          items:
            $ref: "#/components/schemas/HistorySummaryChange"
        lastUpdateVersions:
          $ref: "#/components/schemas/LastUpdateVersions"
        originalData:
          $ref: "#/components/schemas/OriginalData"
        outcomesUpdateCount:
          type: "integer"
          format: "int32"
      required:
      - "changes"
      - "lastUpdateVersions"
      - "originalData"
      - "outcomesUpdateCount"
      additionalProperties: false
    HistorySummaryChange:
      type: "object"
      properties:
        date:
          type: "string"
        moduleLabels:
          type: "array"
          items:
            type: "string"
        status:
          $ref: "#/components/study/Status"
        version:
          type: "integer"
          format: "int32"
      required:
      - "date"
      - "moduleLabels"
      - "status"
      - "version"
      additionalProperties: false
    LastUpdateVersions:
      type: "object"
      properties:
        enrollmentInfo:
          type: "integer"
          format: "int32"
        otherOutcomes:
          type: "integer"
          format: "int32"
        outcomes:
          type: "integer"
          format: "int32"
        primaryOutcomes:
          type: "integer"
          format: "int32"
        secondaryOutcomes:
          type: "integer"
          format: "int32"
      required: []
      additionalProperties: false
    OriginalData:
      type: "object"
      properties:
        enrollmentCountSame:
          type: "boolean"
        enrollmentInfo:
          $ref: "#/components/study/EnrollmentInfo"
        leadSponsor:
          $ref: "#/components/study/Sponsor"
        leadSponsorSame:
          type: "boolean"
        orgFullName:
          type: "string"
        orgFullNameSame:
          type: "boolean"
        otherOutcomes:
          $ref: "#/components/study/Outcome"
        otherOutcomesSame:
          type: "boolean"
        primaryOutcomes:
          $ref: "#/components/study/Outcome"
        primaryOutcomesSame:
          type: "boolean"
        responsibleParty:
          $ref: "#/components/study/ResponsibleParty"
        responsiblePartySame:
          type: "boolean"
        secondaryOutcomes:
          $ref: "#/components/study/Outcome"
        secondaryOutcomesSame:
          type: "boolean"
      required: []
      additionalProperties: false
    HistorySummaryList:
      type: "array"
      items:
        $ref: "#/components/schemas/HistorySummary"
    FieldNode:
      type: "object"
      properties:
        altPieceNames:
          type: "array"
          items:
            type: "string"
        children:
          type: "array"
          items:
            $ref: "#/components/schemas/FieldNode"
        definition:
          type: "string"
        historicOnly:
          type: "boolean"
        indexedOnly:
          type: "boolean"
        isEnum:
          type: "boolean"
        maxChars:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        nested:
          type: "boolean"
        piece:
          type: "string"
        rules:
          type: "string"
        sourceType:
          type: "string"
        synonyms:
          type: "boolean"
        title:
          type: "string"
        type:
          type: "string"
      required:
      - "name"
      - "piece"
      - "sourceType"
      - "type"
      additionalProperties: false
    FieldNodeList:
      type: "array"
      items:
        $ref: "#/components/schemas/FieldNode"
    GzipStats:
      type: "object"
      properties:
        averageSizeBytes:
          type: "integer"
          format: "int32"
        largestStudies:
          type: "array"
          items:
            $ref: "#/components/schemas/StudySize"
        percentiles:
          type: "object"
        ranges:
          type: "array"
          items:
            $ref: "#/components/schemas/DistItem"
        totalStudies:
          type: "integer"
          format: "int32"
      required:
      - "averageSizeBytes"
      - "largestStudies"
      - "percentiles"
      - "ranges"
      - "totalStudies"
      additionalProperties: false
    StudySize:
      type: "object"
      properties:
        id:
          type: "string"
        sizeBytes:
          type: "integer"
          format: "int32"
      required:
      - "id"
      - "sizeBytes"
      additionalProperties: false
    DistItem:
      type: "object"
      properties:
        sizeRange:
          type: "string"
        studiesCount:
          type: "integer"
          format: "int32"
      required:
      - "sizeRange"
      - "studiesCount"
      additionalProperties: false
    GzipStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/GzipStats"
    ListSizes:
      type: "object"
      properties:
        field:
          type: "string"
        maxSize:
          type: "integer"
        minSize:
          type: "integer"
        piece:
          type: "string"
        topSizes:
          type: "array"
          items:
            $ref: "#/components/schemas/ListSize"
        uniqueSizesCount:
          type: "integer"
          format: "int64"
      required:
      - "field"
      - "piece"
      - "uniqueSizesCount"
      additionalProperties: false
    ListSize:
      type: "object"
      properties:
        size:
          type: "integer"
        studiesCount:
          type: "integer"
          format: "int32"
      required:
      - "size"
      - "studiesCount"
      additionalProperties: false
    ListSizesList:
      type: "array"
      items:
        $ref: "#/components/schemas/ListSizes"
    EnumStats:
      type: "object"
      properties:
        field:
          type: "string"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        topValues:
          type: "array"
          items:
            $ref: "#/components/schemas/ValueCount"
        type:
          $ref: "#/components/schemas/FieldStatsType"
        uniqueValuesCount:
          type: "integer"
          format: "int64"
      required:
      - "field"
      - "missingStudiesCount"
      - "piece"
      - "type"
      - "uniqueValuesCount"
      additionalProperties: false
    ValueCount:
      type: "object"
      properties:
        studiesCount:
          type: "integer"
          format: "int32"
        value:
          type: "string"
      required:
      - "studiesCount"
      - "value"
      additionalProperties: false
    FieldStatsType:
      type: "string"
      enum:
      - "ENUM"
      - "STRING"
      - "DATE"
      - "INTEGER"
      - "NUMBER"
      - "BOOLEAN"
    EnumStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/EnumStats"
    StringStats:
      type: "object"
      properties:
        field:
          type: "string"
        longest:
          $ref: "#/components/schemas/LongestString"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        topValues:
          type: "array"
          items:
            $ref: "#/components/schemas/ValueCount"
        type:
          $ref: "#/components/schemas/FieldStatsType"
        uniqueValuesCount:
          type: "integer"
          format: "int64"
      required:
      - "field"
      - "missingStudiesCount"
      - "piece"
      - "type"
      - "uniqueValuesCount"
      additionalProperties: false
    LongestString:
      type: "object"
      properties:
        length:
          type: "integer"
          format: "int32"
        nctId:
          type: "string"
        value:
          type: "string"
      required:
      - "length"
      - "nctId"
      - "value"
      additionalProperties: false
    StringStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/StringStats"
    DateStats:
      type: "object"
      properties:
        field:
          type: "string"
        formats:
          type: "array"
          items:
            type: "string"
        max:
          type: "string"
        min:
          type: "string"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        type:
          $ref: "#/components/schemas/FieldStatsType"
      required:
      - "field"
      - "formats"
      - "missingStudiesCount"
      - "piece"
      - "type"
      additionalProperties: false
    DateStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/DateStats"
    IntegerStats:
      type: "object"
      properties:
        avg:
          type: "number"
          format: "double"
        field:
          type: "string"
        max:
          type: "integer"
          format: "int64"
        min:
          type: "integer"
          format: "int64"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        type:
          $ref: "#/components/schemas/FieldStatsType"
      required:
      - "field"
      - "missingStudiesCount"
      - "piece"
      - "type"
      additionalProperties: false
    IntegerStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/IntegerStats"
    NumberStats:
      type: "object"
      properties:
        avg:
          type: "number"
          format: "double"
        field:
          type: "string"
        max:
          type: "number"
          format: "double"
        min:
          type: "number"
          format: "double"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        type:
          $ref: "#/components/schemas/FieldStatsType"
      required:
      - "field"
      - "missingStudiesCount"
      - "piece"
      - "type"
      additionalProperties: false
    NumberStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/NumberStats"
    BooleanStats:
      type: "object"
      properties:
        falseCount:
          type: "integer"
          format: "int32"
        field:
          type: "string"
        missingStudiesCount:
          type: "integer"
          format: "int32"
        piece:
          type: "string"
        trueCount:
          type: "integer"
          format: "int32"
        type:
          $ref: "#/components/schemas/FieldStatsType"
      required:
      - "falseCount"
      - "field"
      - "missingStudiesCount"
      - "piece"
      - "trueCount"
      - "type"
      additionalProperties: false
    BooleanStatsList:
      type: "array"
      items:
        $ref: "#/components/schemas/BooleanStats"
    Version:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        dataTimestamp:
          type: "string"
      required:
      - "apiVersion"
      additionalProperties: false
    VersionList:
      type: "array"
      items:
        $ref: "#/components/schemas/Version"
    SearchDocument:
      type: "object"
      properties:
        areas:
          type: "array"
          items:
            $ref: "#/components/schemas/SearchArea"
        name:
          type: "string"
      required:
      - "areas"
      - "name"
      additionalProperties: false
    SearchArea:
      type: "object"
      properties:
        name:
          type: "string"
        param:
          type: "string"
        parts:
          type: "array"
          items:
            $ref: "#/components/schemas/SearchPart"
        uiLabel:
          type: "string"
      required:
      - "name"
      - "parts"
      additionalProperties: false
    SearchPart:
      type: "object"
      properties:
        isEnum:
          type: "boolean"
        isSynonyms:
          type: "boolean"
        pieces:
          type: "array"
          items:
            type: "string"
        type:
          type: "string"
        weight:
          type: "number"
          format: "float"
      required:
      - "isEnum"
      - "isSynonyms"
      - "pieces"
      - "type"
      - "weight"
      additionalProperties: false
    SearchDocumentList:
      type: "array"
      items:
        $ref: "#/components/schemas/SearchDocument"
    PagedStudies:
      type: "object"
      properties:
        nextPageToken:
          type: "string"
        studies:
          $ref: "#/components/shared/StudyList"
        totalCount:
          type: "integer"
          format: "int32"
      required:
      - "studies"
      additionalProperties: false
    PagedStudiesList:
      type: "array"
      items:
        $ref: "#/components/schemas/PagedStudies"
    StudyVersion:
      type: "object"
      properties:
        patch:
          $ref: "#/components/schemas/JsonNode"
        patchVersion:
          type: "integer"
          format: "int32"
        study:
          $ref: "#/components/study/Study"
        studyVersion:
          type: "integer"
          format: "int32"
      required:
      - "study"
      - "studyVersion"
      additionalProperties: false
    JsonNode:
      type: "object"
      properties: {}
      required: []
      additionalProperties: false
    StudyVersionList:
      type: "array"
      items:
        $ref: "#/components/schemas/StudyVersion"
  study:
    Study:
      type: "object"
      properties:
        protocolSection:
          $ref: "#/components/study/ProtocolSection"
        resultsSection:
          $ref: "#/components/study/ResultsSection"
        annotationSection:
          $ref: "#/components/study/AnnotationSection"
        documentSection:
          $ref: "#/components/study/DocumentSection"
        derivedSection:
          $ref: "#/components/study/DerivedSection"
        hasResults:
          type: "boolean"
    ProtocolSection:
      type: "object"
      properties:
        identificationModule:
          $ref: "#/components/study/IdentificationModule"
        statusModule:
          $ref: "#/components/study/StatusModule"
        sponsorCollaboratorsModule:
          $ref: "#/components/study/SponsorCollaboratorsModule"
        oversightModule:
          $ref: "#/components/study/OversightModule"
        descriptionModule:
          $ref: "#/components/study/DescriptionModule"
        conditionsModule:
          $ref: "#/components/study/ConditionsModule"
        designModule:
          $ref: "#/components/study/DesignModule"
        armsInterventionsModule:
          $ref: "#/components/study/ArmsInterventionsModule"
        outcomesModule:
          $ref: "#/components/study/OutcomesModule"
        eligibilityModule:
          $ref: "#/components/study/EligibilityModule"
        contactsLocationsModule:
          $ref: "#/components/study/ContactsLocationsModule"
        referencesModule:
          $ref: "#/components/study/ReferencesModule"
        ipdSharingStatementModule:
          $ref: "#/components/study/IpdSharingStatementModule"
    ResultsSection:
      type: "object"
      properties:
        participantFlowModule:
          $ref: "#/components/study/ParticipantFlowModule"
        baselineCharacteristicsModule:
          $ref: "#/components/study/BaselineCharacteristicsModule"
        outcomeMeasuresModule:
          $ref: "#/components/study/OutcomeMeasuresModule"
        adverseEventsModule:
          $ref: "#/components/study/AdverseEventsModule"
        moreInfoModule:
          $ref: "#/components/study/MoreInfoModule"
    AnnotationSection:
      type: "object"
      properties:
        annotationModule:
          $ref: "#/components/study/AnnotationModule"
    DocumentSection:
      type: "object"
      properties:
        largeDocumentModule:
          $ref: "#/components/study/LargeDocumentModule"
    DerivedSection:
      type: "object"
      properties:
        miscInfoModule:
          $ref: "#/components/study/MiscInfoModule"
        conditionBrowseModule:
          $ref: "#/components/study/BrowseModule"
        interventionBrowseModule:
          $ref: "#/components/study/BrowseModule"
    IdentificationModule:
      type: "object"
      properties:
        nctId:
          type: "string"
        nctIdAliases:
          type: "array"
          items:
            type: "string"
        orgStudyIdInfo:
          $ref: "#/components/study/OrgStudyIdInfo"
        secondaryIdInfos:
          type: "array"
          items:
            $ref: "#/components/study/SecondaryIdInfo"
        briefTitle:
          type: "string"
        officialTitle:
          type: "string"
        acronym:
          type: "string"
        organization:
          $ref: "#/components/study/Organization"
    StatusModule:
      type: "object"
      properties:
        statusVerifiedDate:
          type: "string"
          format: "date"
        overallStatus:
          $ref: "#/components/study/Status"
        lastKnownStatus:
          $ref: "#/components/study/Status"
        delayedPosting:
          type: "boolean"
        whyStopped:
          type: "string"
        expandedAccessInfo:
          $ref: "#/components/study/ExpandedAccessInfo"
        startDateStruct:
          $ref: "#/components/study/DateStruct"
        primaryCompletionDateStruct:
          $ref: "#/components/study/DateStruct"
        completionDateStruct:
          $ref: "#/components/study/DateStruct"
        studyFirstSubmitDate:
          type: "string"
          format: "date"
        studyFirstSubmitQcDate:
          type: "string"
          format: "date"
        studyFirstPostDateStruct:
          $ref: "#/components/study/DateStruct"
        resultsFirstSubmitDate:
          type: "string"
          format: "date"
        resultsFirstSubmitQcDate:
          type: "string"
          format: "date"
        resultsFirstPostDateStruct:
          $ref: "#/components/study/DateStruct"
        dispFirstSubmitDate:
          type: "string"
          format: "date"
        dispFirstSubmitQcDate:
          type: "string"
          format: "date"
        dispFirstPostDateStruct:
          $ref: "#/components/study/DateStruct"
        lastUpdateSubmitDate:
          type: "string"
          format: "date"
        lastUpdatePostDateStruct:
          $ref: "#/components/study/DateStruct"
    SponsorCollaboratorsModule:
      type: "object"
      properties:
        responsibleParty:
          $ref: "#/components/study/ResponsibleParty"
        leadSponsor:
          $ref: "#/components/study/Sponsor"
        collaborators:
          type: "array"
          items:
            $ref: "#/components/study/Sponsor"
    OversightModule:
      type: "object"
      properties:
        oversightHasDmc:
          type: "boolean"
        isFdaRegulatedDrug:
          type: "boolean"
        isFdaRegulatedDevice:
          type: "boolean"
        isUnapprovedDevice:
          type: "boolean"
        isPpsd:
          type: "boolean"
        isUsExport:
          type: "boolean"
        fdaaa801Violation:
          type: "boolean"
    DescriptionModule:
      type: "object"
      properties:
        briefSummary:
          type: "string"
        detailedDescription:
          type: "string"
    ConditionsModule:
      type: "object"
      properties:
        conditions:
          type: "array"
          items:
            type: "string"
        keywords:
          type: "array"
          items:
            type: "string"
    DesignModule:
      type: "object"
      properties:
        studyType:
          $ref: "#/components/study/StudyType"
        nPtrsToThisExpAccNctId:
          type: "number"
        expandedAccessTypes:
          $ref: "#/components/study/ExpandedAccessTypes"
        patientRegistry:
          type: "boolean"
        targetDuration:
          type: "string"
          pattern: "^\\d+ (Year|Years|Month|Months|Week|Weeks|Day|Days|Hour|Hours|Minute|Minutes)$"
        phases:
          type: "array"
          items:
            $ref: "#/components/study/Phase"
        designInfo:
          $ref: "#/components/study/DesignInfo"
        bioSpec:
          $ref: "#/components/study/BioSpec"
        enrollmentInfo:
          $ref: "#/components/study/EnrollmentInfo"
    ArmsInterventionsModule:
      type: "object"
      properties:
        armGroups:
          type: "array"
          items:
            $ref: "#/components/study/ArmGroup"
        interventions:
          type: "array"
          items:
            $ref: "#/components/study/Intervention"
    OutcomesModule:
      type: "object"
      properties:
        primaryOutcomes:
          type: "array"
          items:
            $ref: "#/components/study/Outcome"
        secondaryOutcomes:
          type: "array"
          items:
            $ref: "#/components/study/Outcome"
        otherOutcomes:
          type: "array"
          items:
            $ref: "#/components/study/Outcome"
    EligibilityModule:
      type: "object"
      properties:
        eligibilityCriteria:
          type: "string"
        healthyVolunteers:
          type: "boolean"
        sex:
          $ref: "#/components/study/Sex"
        genderBased:
          type: "boolean"
        genderDescription:
          type: "string"
        minimumAge:
          type: "string"
          pattern: "^\\d+ (Year|Years|Month|Months|Week|Weeks|Day|Days|Hour|Hours|Minute|Minutes)$"
        maximumAge:
          type: "string"
          pattern: "^\\d+ (Year|Years|Month|Months|Week|Weeks|Day|Days|Hour|Hours|Minute|Minutes)$"
        stdAges:
          type: "array"
          items:
            $ref: "#/components/study/StandardAge"
        studyPopulation:
          type: "string"
        samplingMethod:
          $ref: "#/components/study/SamplingMethod"
    ContactsLocationsModule:
      type: "object"
      properties:
        centralContacts:
          type: "array"
          items:
            $ref: "#/components/study/Contact"
        overallOfficials:
          type: "array"
          items:
            $ref: "#/components/study/Official"
        locations:
          type: "array"
          items:
            $ref: "#/components/study/Location"
    ReferencesModule:
      type: "object"
      properties:
        references:
          type: "array"
          items:
            $ref: "#/components/study/Reference"
        seeAlsoLinks:
          type: "array"
          items:
            $ref: "#/components/study/SeeAlsoLink"
        availIpds:
          type: "array"
          items:
            $ref: "#/components/study/AvailIpd"
    OutcomeMeasuresModule:
      type: "object"
      properties:
        outcomeMeasures:
          type: "array"
          items:
            $ref: "#/components/study/OutcomeMeasure"
    MoreInfoModule:
      type: "object"
      properties:
        limitationsAndCaveats:
          $ref: "#/components/study/LimitationsAndCaveats"
        certainAgreement:
          $ref: "#/components/study/CertainAgreement"
        pointOfContact:
          $ref: "#/components/study/PointOfContact"
    AnnotationModule:
      type: "object"
      properties:
        unpostedAnnotation:
          $ref: "#/components/study/UnpostedAnnotation"
        violationAnnotation:
          $ref: "#/components/study/ViolationAnnotation"
    MiscInfoModule:
      type: "object"
      properties:
        versionHolder:
          type: "string"
          format: "date"
        removedCountries:
          type: "array"
          items:
            type: "string"
        submissionTracking:
          $ref: "#/components/study/SubmissionTracking"
        modelPredictions:
          $ref: "#/components/study/ModelPredictions"
    UnpostedAnnotation:
      type: "object"
      properties:
        unpostedResponsibleParty:
          type: "string"
        unpostedEvents:
          type: "array"
          items:
            $ref: "#/components/study/UnpostedEvent"
    ViolationAnnotation:
      type: "object"
      properties:
        violationEvents:
          type: "array"
          items:
            $ref: "#/components/study/ViolationEvent"
    SubmissionTracking:
      type: "object"
      properties:
        estimatedResultsFirstSubmitDate:
          type: "string"
          format: "date"
        firstMcpInfo:
          $ref: "#/components/study/FirstMcpInfo"
        submissionInfos:
          type: "array"
          items:
            $ref: "#/components/study/SubmissionInfo"
    ModelPredictions:
      type: "object"
      properties:
        bmiLimits:
          $ref: "#/components/study/BmiLimits"
    BmiLimits:
      type: "object"
      properties:
        minBmi:
          type: "number"
        maxBmi:
          type: "number"
    EnrollmentInfo:
      type: "object"
      properties:
        count:
          type: "integer"
        type:
          $ref: "#/components/study/EnrollmentType"
    BioSpec:
      type: "object"
      properties:
        retention:
          type: "string"
        description:
          type: "string"
    SeeAlsoLink:
      type: "object"
      properties:
        label:
          type: "string"
        url:
          type: "string"
    FirstMcpInfo:
      type: "object"
      properties:
        postDateStruct:
          $ref: "#/components/study/DateStruct"
    ExpandedAccessTypes:
      type: "object"
      properties:
        individual:
          type: "boolean"
        intermediate:
          type: "boolean"
        treatment:
          type: "boolean"
    Intervention:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/InterventionType"
        name:
          type: "string"
        description:
          type: "string"
        armGroupLabels:
          type: "array"
          items:
            type: "string"
        otherNames:
          type: "array"
          items:
            type: "string"
    AvailIpd:
      type: "object"
      properties:
        id:
          type: "string"
        type:
          type: "string"
        url:
          type: "string"
        comment:
          type: "string"
    SecondaryIdInfo:
      type: "object"
      properties:
        id:
          type: "string"
        type:
          $ref: "#/components/study/SecondaryIdType"
        domain:
          type: "string"
        link:
          type: "string"
    LimitationsAndCaveats:
      type: "object"
      properties:
        description:
          type: "string"
    DateStruct:
      type: "object"
      properties:
        date:
          type: "string"
          format: "date"
        type:
          $ref: "#/components/study/DateType"
    SubmissionInfo:
      type: "object"
      properties:
        releaseDate:
          type: "string"
          format: "date"
        unreleaseDate:
          type: "string"
          format: "date"
        unreleaseDateUnknown:
          type: "boolean"
        resetDate:
          type: "string"
          format: "date"
        mcpReleaseN:
          type: "integer"
    ExpandedAccessInfo:
      type: "object"
      properties:
        hasExpandedAccess:
          type: "boolean"
        nctId:
          type: "string"
        statusForNctId:
          $ref: "#/components/study/ExpandedAccessStatus"
    AdverseEventsModule:
      type: "object"
      properties:
        frequencyThreshold:
          type: "string"
        timeFrame:
          type: "string"
        description:
          type: "string"
        allCauseMortalityComment:
          type: "string"
        eventGroups:
          type: "array"
          items:
            $ref: "#/components/study/EventGroup"
        seriousEvents:
          type: "array"
          items:
            $ref: "#/components/study/AdverseEvent"
        otherEvents:
          type: "array"
          items:
            $ref: "#/components/study/AdverseEvent"
    ViolationEvent:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/ViolationEventType"
        description:
          type: "string"
        creationDate:
          type: "string"
          format: "date"
        issuedDate:
          type: "string"
          format: "date"
        releaseDate:
          type: "string"
          format: "date"
        postedDate:
          type: "string"
          format: "date"
    ArmGroup:
      type: "object"
      properties:
        label:
          type: "string"
        type:
          $ref: "#/components/study/ArmGroupType"
        description:
          type: "string"
        interventionNames:
          type: "array"
          items:
            type: "string"
    DesignInfo:
      type: "object"
      properties:
        allocation:
          $ref: "#/components/study/DesignAllocation"
        interventionModel:
          $ref: "#/components/study/InterventionalAssignment"
        interventionModelDescription:
          type: "string"
        primaryPurpose:
          $ref: "#/components/study/PrimaryPurpose"
        observationalModel:
          $ref: "#/components/study/ObservationalModel"
        timePerspective:
          $ref: "#/components/study/DesignTimePerspective"
        maskingInfo:
          $ref: "#/components/study/MaskingBlock"
    Organization:
      type: "object"
      properties:
        fullName:
          type: "string"
        class:
          $ref: "#/components/study/AgencyClass"
    PointOfContact:
      type: "object"
      properties:
        title:
          type: "string"
        organization:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
        phoneExt:
          type: "string"
    IpdSharingStatementModule:
      type: "object"
      properties:
        ipdSharing:
          $ref: "#/components/study/IpdSharing"
        description:
          type: "string"
        infoTypes:
          type: "array"
          items:
            $ref: "#/components/study/IpdSharingInfoType"
        timeFrame:
          type: "string"
        accessCriteria:
          type: "string"
        url:
          type: "string"
    OrgStudyIdInfo:
      type: "object"
      properties:
        id:
          type: "string"
        type:
          $ref: "#/components/study/OrgStudyIdType"
        link:
          type: "string"
    ResponsibleParty:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/ResponsiblePartyType"
        investigatorFullName:
          type: "string"
        investigatorTitle:
          type: "string"
        investigatorAffiliation:
          type: "string"
        oldNameTitle:
          type: "string"
        oldOrganization:
          type: "string"
    CertainAgreement:
      type: "object"
      properties:
        piSponsorEmployee:
          type: "boolean"
        restrictionType:
          $ref: "#/components/study/AgreementRestrictionType"
        restrictiveAgreement:
          type: "boolean"
        otherDetails:
          type: "string"
    UnpostedEvent:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/UnpostedEventType"
        date:
          type: "string"
          format: "date"
        dateUnknown:
          type: "boolean"
    Contact:
      type: "object"
      properties:
        name:
          type: "string"
        role:
          $ref: "#/components/study/ContactRole"
        phone:
          type: "string"
        phoneExt:
          type: "string"
        email:
          type: "string"
    Outcome:
      type: "object"
      properties:
        measure:
          type: "string"
        description:
          type: "string"
        timeFrame:
          type: "string"
    OutcomeMeasure:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/OutcomeMeasureType"
        title:
          type: "string"
        description:
          type: "string"
        populationDescription:
          type: "string"
        reportingStatus:
          $ref: "#/components/study/ReportingStatus"
        anticipatedPostingDate:
          type: "string"
          format: "date"
        paramType:
          $ref: "#/components/study/MeasureParam"
        dispersionType:
          type: "string"
        unitOfMeasure:
          type: "string"
        calculatePct:
          type: "boolean"
        timeFrame:
          type: "string"
        typeUnitsAnalyzed:
          type: "string"
        denomUnitsSelected:
          type: "string"
        groups:
          type: "array"
          items:
            $ref: "#/components/study/MeasureGroup"
        denoms:
          type: "array"
          items:
            $ref: "#/components/study/Denom"
        classes:
          type: "array"
          items:
            $ref: "#/components/study/MeasureClass"
        analyses:
          type: "array"
          items:
            $ref: "#/components/study/MeasureAnalysis"
    BaselineCharacteristicsModule:
      type: "object"
      properties:
        populationDescription:
          type: "string"
        typeUnitsAnalyzed:
          type: "string"
        groups:
          type: "array"
          items:
            $ref: "#/components/study/MeasureGroup"
        denoms:
          type: "array"
          items:
            $ref: "#/components/study/Denom"
        measures:
          type: "array"
          items:
            $ref: "#/components/study/BaselineMeasure"
    Reference:
      type: "object"
      properties:
        pmid:
          type: "string"
        type:
          $ref: "#/components/study/ReferenceType"
        citation:
          type: "string"
        retractions:
          type: "array"
          items:
            $ref: "#/components/study/Retraction"
    ParticipantFlowModule:
      type: "object"
      properties:
        preAssignmentDetails:
          type: "string"
        recruitmentDetails:
          type: "string"
        typeUnitsAnalyzed:
          type: "string"
        groups:
          type: "array"
          items:
            $ref: "#/components/study/FlowGroup"
        periods:
          type: "array"
          items:
            $ref: "#/components/study/FlowPeriod"
    LargeDocumentModule:
      type: "object"
      properties:
        noSap:
          type: "boolean"
        largeDocs:
          type: "array"
          items:
            $ref: "#/components/study/LargeDoc"
    Location:
      type: "object"
      properties:
        facility:
          type: "string"
        status:
          $ref: "#/components/study/RecruitmentStatus"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
        country:
          type: "string"
        contacts:
          type: "array"
          items:
            $ref: "#/components/study/Contact"
        geoPoint:
          $ref: "#/components/study/GeoPoint"
    Sponsor:
      type: "object"
      properties:
        name:
          type: "string"
        class:
          $ref: "#/components/study/AgencyClass"
    BrowseModule:
      type: "object"
      properties:
        meshes:
          type: "array"
          items:
            $ref: "#/components/study/Mesh"
        ancestors:
          type: "array"
          items:
            $ref: "#/components/study/Mesh"
        browseLeaves:
          type: "array"
          items:
            $ref: "#/components/study/BrowseLeaf"
        browseBranches:
          type: "array"
          items:
            $ref: "#/components/study/BrowseBranch"
    Official:
      type: "object"
      properties:
        name:
          type: "string"
        affiliation:
          type: "string"
        role:
          $ref: "#/components/study/OfficialRole"
    BrowseLeaf:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        asFound:
          type: "string"
        relevance:
          $ref: "#/components/study/BrowseLeafRelevance"
    MaskingBlock:
      type: "object"
      properties:
        masking:
          $ref: "#/components/study/DesignMasking"
        maskingDescription:
          type: "string"
        whoMasked:
          type: "array"
          items:
            $ref: "#/components/study/WhoMasked"
    EventGroup:
      type: "object"
      properties:
        id:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
        deathsNumAffected:
          type: "integer"
        deathsNumAtRisk:
          type: "integer"
        seriousNumAffected:
          type: "integer"
        seriousNumAtRisk:
          type: "integer"
        otherNumAffected:
          type: "integer"
        otherNumAtRisk:
          type: "integer"
    Mesh:
      type: "object"
      properties:
        id:
          type: "string"
        term:
          type: "string"
    FlowGroup:
      type: "object"
      properties:
        id:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
    MeasureAnalysis:
      type: "object"
      properties:
        paramType:
          type: "string"
        paramValue:
          type: "string"
        dispersionType:
          $ref: "#/components/study/AnalysisDispersionType"
        dispersionValue:
          type: "string"
        statisticalMethod:
          type: "string"
        statisticalComment:
          type: "string"
        pValue:
          type: "string"
        pValueComment:
          type: "string"
        ciNumSides:
          $ref: "#/components/study/ConfidenceIntervalNumSides"
        ciPctValue:
          type: "string"
        ciLowerLimit:
          type: "string"
        ciUpperLimit:
          type: "string"
        ciLowerLimitComment:
          type: "string"
        ciUpperLimitComment:
          type: "string"
        estimateComment:
          type: "string"
        testedNonInferiority:
          type: "boolean"
        nonInferiorityType:
          $ref: "#/components/study/NonInferiorityType"
        nonInferiorityComment:
          type: "string"
        otherAnalysisDescription:
          type: "string"
        groupDescription:
          type: "string"
        groupIds:
          type: "array"
          items:
            type: "string"
    AdverseEvent:
      type: "object"
      properties:
        term:
          type: "string"
        organSystem:
          type: "string"
        sourceVocabulary:
          type: "string"
        assessmentType:
          $ref: "#/components/study/EventAssessment"
        notes:
          type: "string"
        stats:
          type: "array"
          items:
            $ref: "#/components/study/EventStats"
    Retraction:
      type: "object"
      properties:
        pmid:
          type: "string"
        source:
          type: "string"
    Denom:
      type: "object"
      properties:
        units:
          type: "string"
        counts:
          type: "array"
          items:
            $ref: "#/components/study/DenomCount"
    FlowPeriod:
      type: "object"
      properties:
        title:
          type: "string"
        milestones:
          type: "array"
          items:
            $ref: "#/components/study/FlowMilestone"
        dropWithdraws:
          type: "array"
          items:
            $ref: "#/components/study/DropWithdraw"
    MeasureGroup:
      type: "object"
      properties:
        id:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
    MeasureClass:
      type: "object"
      properties:
        title:
          type: "string"
        denoms:
          type: "array"
          items:
            $ref: "#/components/study/Denom"
        categories:
          type: "array"
          items:
            $ref: "#/components/study/MeasureCategory"
    BrowseBranch:
      type: "object"
      properties:
        abbrev:
          type: "string"
        name:
          type: "string"
    BaselineMeasure:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        populationDescription:
          type: "string"
        paramType:
          $ref: "#/components/study/MeasureParam"
        dispersionType:
          $ref: "#/components/study/MeasureDispersionType"
        unitOfMeasure:
          type: "string"
        calculatePct:
          type: "boolean"
        denomUnitsSelected:
          type: "string"
        denoms:
          type: "array"
          items:
            $ref: "#/components/study/Denom"
        classes:
          type: "array"
          items:
            $ref: "#/components/study/MeasureClass"
    LargeDoc:
      type: "object"
      properties:
        typeAbbrev:
          type: "string"
        hasProtocol:
          type: "boolean"
        hasSap:
          type: "boolean"
        hasIcf:
          type: "boolean"
        label:
          type: "string"
        date:
          type: "string"
          format: "date"
        uploadDate:
          type: "string"
          format: "date"
        filename:
          type: "string"
        size:
          type: "integer"
    DropWithdraw:
      type: "object"
      properties:
        type:
          type: "string"
        comment:
          type: "string"
        reasons:
          type: "array"
          items:
            $ref: "#/components/study/FlowStats"
    DenomCount:
      type: "object"
      properties:
        groupId:
          type: "string"
        value:
          type: "string"
    EventStats:
      type: "object"
      properties:
        groupId:
          type: "string"
        numEvents:
          type: "integer"
        numAffected:
          type: "integer"
        numAtRisk:
          type: "integer"
    MeasureCategory:
      type: "object"
      properties:
        title:
          type: "string"
        measurements:
          type: "array"
          items:
            $ref: "#/components/study/Measurement"
    FlowMilestone:
      type: "object"
      properties:
        type:
          type: "string"
        comment:
          type: "string"
        achievements:
          type: "array"
          items:
            $ref: "#/components/study/FlowStats"
    FlowStats:
      type: "object"
      properties:
        groupId:
          type: "string"
        comment:
          type: "string"
        numSubjects:
          type: "string"
        numUnits:
          type: "string"
    Measurement:
      type: "object"
      properties:
        groupId:
          type: "string"
        value:
          type: "string"
        spread:
          type: "string"
        lowerLimit:
          type: "string"
        upperLimit:
          type: "string"
        comment:
          type: "string"
    Status:
      type: "string"
      enum:
      - "ACTIVE_NOT_RECRUITING"
      - "COMPLETED"
      - "ENROLLING_BY_INVITATION"
      - "NOT_YET_RECRUITING"
      - "RECRUITING"
      - "SUSPENDED"
      - "TERMINATED"
      - "WITHDRAWN"
      - "AVAILABLE"
      - "NO_LONGER_AVAILABLE"
      - "TEMPORARILY_NOT_AVAILABLE"
      - "APPROVED_FOR_MARKETING"
      - "WITHHELD"
      - "UNKNOWN"
    StudyType:
      type: "string"
      enum:
      - "EXPANDED_ACCESS"
      - "INTERVENTIONAL"
      - "OBSERVATIONAL"
    Phase:
      type: "string"
      enum:
      - "NA"
      - "EARLY_PHASE1"
      - "PHASE1"
      - "PHASE2"
      - "PHASE3"
      - "PHASE4"
    Sex:
      type: "string"
      enum:
      - "FEMALE"
      - "MALE"
      - "ALL"
    StandardAge:
      type: "string"
      enum:
      - "CHILD"
      - "ADULT"
      - "OLDER_ADULT"
    SamplingMethod:
      type: "string"
      enum:
      - "PROBABILITY_SAMPLE"
      - "NON_PROBABILITY_SAMPLE"
    IpdSharing:
      type: "string"
      enum:
      - "YES"
      - "NO"
      - "UNDECIDED"
    IpdSharingInfoType:
      type: "string"
      enum:
      - "STUDY_PROTOCOL"
      - "SAP"
      - "ICF"
      - "CSR"
      - "ANALYTIC_CODE"
    OrgStudyIdType:
      type: "string"
      enum:
      - "NIH"
      - "FDA"
      - "VA"
      - "CDC"
      - "AHRQ"
      - "SAMHSA"
    SecondaryIdType:
      type: "string"
      enum:
      - "NIH"
      - "FDA"
      - "VA"
      - "CDC"
      - "AHRQ"
      - "SAMHSA"
      - "OTHER_GRANT"
      - "EUDRACT_NUMBER"
      - "REGISTRY"
      - "OTHER"
    AgencyClass:
      type: "string"
      enum:
      - "NIH"
      - "FED"
      - "OTHER_GOV"
      - "INDIV"
      - "INDUSTRY"
      - "NETWORK"
      - "AMBIG"
      - "OTHER"
      - "UNKNOWN"
    ExpandedAccessStatus:
      type: "string"
      enum:
      - "AVAILABLE"
      - "NO_LONGER_AVAILABLE"
      - "TEMPORARILY_NOT_AVAILABLE"
      - "APPROVED_FOR_MARKETING"
    DateType:
      type: "string"
      enum:
      - "ACTUAL"
      - "ESTIMATED"
    ResponsiblePartyType:
      type: "string"
      enum:
      - "SPONSOR"
      - "PRINCIPAL_INVESTIGATOR"
      - "SPONSOR_INVESTIGATOR"
    DesignAllocation:
      type: "string"
      enum:
      - "RANDOMIZED"
      - "NON_RANDOMIZED"
      - "NA"
    InterventionalAssignment:
      type: "string"
      enum:
      - "SINGLE_GROUP"
      - "PARALLEL"
      - "CROSSOVER"
      - "FACTORIAL"
      - "SEQUENTIAL"
    PrimaryPurpose:
      type: "string"
      enum:
      - "TREATMENT"
      - "PREVENTION"
      - "DIAGNOSTIC"
      - "ECT"
      - "SUPPORTIVE_CARE"
      - "SCREENING"
      - "HEALTH_SERVICES_RESEARCH"
      - "BASIC_SCIENCE"
      - "DEVICE_FEASIBILITY"
      - "OTHER"
    ObservationalModel:
      type: "string"
      enum:
      - "COHORT"
      - "CASE_CONTROL"
      - "CASE_ONLY"
      - "CASE_CROSSOVER"
      - "ECOLOGIC_OR_COMMUNITY"
      - "FAMILY_BASED"
      - "DEFINED_POPULATION"
      - "NATURAL_HISTORY"
      - "OTHER"
    DesignTimePerspective:
      type: "string"
      enum:
      - "RETROSPECTIVE"
      - "PROSPECTIVE"
      - "CROSS_SECTIONAL"
      - "OTHER"
    BioSpecRetention:
      type: "string"
      enum:
      - "NONE_RETAINED"
      - "SAMPLES_WITH_DNA"
      - "SAMPLES_WITHOUT_DNA"
    EnrollmentType:
      type: "string"
      enum:
      - "ACTUAL"
      - "ESTIMATED"
    ArmGroupType:
      type: "string"
      enum:
      - "EXPERIMENTAL"
      - "ACTIVE_COMPARATOR"
      - "PLACEBO_COMPARATOR"
      - "SHAM_COMPARATOR"
      - "NO_INTERVENTION"
      - "OTHER"
    InterventionType:
      type: "string"
      enum:
      - "BEHAVIORAL"
      - "BIOLOGICAL"
      - "COMBINATION_PRODUCT"
      - "DEVICE"
      - "DIAGNOSTIC_TEST"
      - "DIETARY_SUPPLEMENT"
      - "DRUG"
      - "GENETIC"
      - "PROCEDURE"
      - "RADIATION"
      - "OTHER"
    ContactRole:
      type: "string"
      enum:
      - "STUDY_CHAIR"
      - "STUDY_DIRECTOR"
      - "PRINCIPAL_INVESTIGATOR"
      - "SUB_INVESTIGATOR"
      - "CONTACT"
    OfficialRole:
      type: "string"
      enum:
      - "STUDY_CHAIR"
      - "STUDY_DIRECTOR"
      - "PRINCIPAL_INVESTIGATOR"
      - "SUB_INVESTIGATOR"
    RecruitmentStatus:
      type: "string"
      enum:
      - "ACTIVE_NOT_RECRUITING"
      - "COMPLETED"
      - "ENROLLING_BY_INVITATION"
      - "NOT_YET_RECRUITING"
      - "RECRUITING"
      - "SUSPENDED"
      - "TERMINATED"
      - "WITHDRAWN"
      - "AVAILABLE"
    ReferenceType:
      type: "string"
      enum:
      - "BACKGROUND"
      - "RESULT"
      - "DERIVED"
    MeasureParam:
      type: "string"
      enum:
      - "GEOMETRIC_MEAN"
      - "GEOMETRIC_LEAST_SQUARES_MEAN"
      - "LEAST_SQUARES_MEAN"
      - "LOG_MEAN"
      - "MEAN"
      - "MEDIAN"
      - "NUMBER"
      - "COUNT_OF_PARTICIPANTS"
      - "COUNT_OF_UNITS"
    MeasureDispersionType:
      type: "string"
      enum:
      - "NA"
      - "STANDARD_DEVIATION"
      - "STANDARD_ERROR"
      - "INTER_QUARTILE_RANGE"
      - "FULL_RANGE"
      - "CONFIDENCE_80"
      - "CONFIDENCE_90"
      - "CONFIDENCE_95"
      - "CONFIDENCE_975"
      - "CONFIDENCE_99"
      - "CONFIDENCE_OTHER"
      - "GEOMETRIC_COEFFICIENT"
    OutcomeMeasureType:
      type: "string"
      enum:
      - "PRIMARY"
      - "SECONDARY"
      - "OTHER_PRE_SPECIFIED"
      - "POST_HOC"
    ReportingStatus:
      type: "string"
      enum:
      - "NOT_POSTED"
      - "POSTED"
    EventAssessment:
      type: "string"
      enum:
      - "NON_SYSTEMATIC_ASSESSMENT"
      - "SYSTEMATIC_ASSESSMENT"
    AgreementRestrictionType:
      type: "string"
      enum:
      - "LTE60"
      - "GT60"
      - "OTHER"
    BrowseLeafRelevance:
      type: "string"
      enum:
      - "LOW"
      - "HIGH"
    DesignMasking:
      type: "string"
      enum:
      - "NONE"
      - "SINGLE"
      - "DOUBLE"
      - "TRIPLE"
      - "QUADRUPLE"
    WhoMasked:
      type: "string"
      enum:
      - "PARTICIPANT"
      - "CARE_PROVIDER"
      - "INVESTIGATOR"
      - "OUTCOMES_ASSESSOR"
    AnalysisDispersionType:
      type: "string"
      enum:
      - "STANDARD_DEVIATION"
      - "STANDARD_ERROR_OF_MEAN"
    ConfidenceIntervalNumSides:
      type: "string"
      enum:
      - "ONE_SIDED"
      - "TWO_SIDED"
    NonInferiorityType:
      type: "string"
      enum:
      - "SUPERIORITY"
      - "NON_INFERIORITY"
      - "EQUIVALENCE"
      - "OTHER"
      - "NON_INFERIORITY_OR_EQUIVALENCE"
      - "SUPERIORITY_OR_OTHER"
      - "NON_INFERIORITY_OR_EQUIVALENCE_LEGACY"
      - "SUPERIORITY_OR_OTHER_LEGACY"
    UnpostedEventType:
      type: "string"
      enum:
      - "RESET"
      - "RELEASE"
      - "UNRELEASE"
    ViolationEventType:
      type: "string"
      enum:
      - "VIOLATION_IDENTIFIED"
      - "CORRECTION_CONFIRMED"
      - "PENALTY_IMPOSED"
    GeoPoint:
      type: "object"
      properties:
        lat:
          type: "number"
        lon:
          type: "number"
      required:
      - "lat"
      - "lon"
  shared:
    StudyDetails:
      title: "Study wrapper object"
      description: "`study` field values of type `text` and `markup` are html-encoded\
        \ and may contain `<mark>` tags for highlighting.\nHighlighting for enums\
        \ and numbers is provided in `extraHighlights`.\n"
      type: "object"
      properties:
        study:
          description: "Field values of type `text` and `markup` are html-encoded\
            \ and may contain `<mark>` tags for highlighting.\n"
          $ref: "#/components/study/Study"
        extraHighlights:
          $ref: "#/components/shared/ExtraHighlights"
        topics:
          type: "object"
          propertyNames:
          - "GHR"
          - "MedlinePlus"
          - "SIS"
          - "ORD"
          additionalProperties:
            type: "array"
            items:
              $ref: "#/components/shared/Topic"
        history:
          $ref: "#/components/schemas/HistorySummary"
      required:
      - "study"
    StudyList:
      title: "Array of studies"
      description: "`study` field values of type `markup` are in markdown format.\n"
      type: "array"
      items:
        $ref: "#/components/study/Study"
    StudiesCsv:
      description: "Study objects in csv file"
      type: "string"
      contentMediaType: "text/csv"
    StudiesTxt:
      description: "Study NCT numbers in text file"
      type: "string"
      contentMediaType: "text/plain"
    StudiesZip:
      description: "Study objects as files in zip archive"
      type: "string"
      contentMediaType: "application/zip"
      contentEncoding: "base64"
    StudyFhir:
      description: "Study in FHIR JSON format"
      type: "object"
    Topic:
      type: "object"
      properties:
        name:
          $ref: "#/components/shared/nonEmptyString"
        url:
          type: "string"
          format: "uri"
      required:
      - "name"
      - "uri"
    StudyIds:
      type: "array"
      items:
        type: "string"
    SynonymItem:
      type: "object"
      properties:
        id:
          $ref: "#/components/shared/uint"
        norm:
          $ref: "#/components/shared/nonEmptyString"
        orig:
          $ref: "#/components/shared/nonEmptyString"
        count:
          $ref: "#/components/shared/uint"
      required:
      - "id"
      - "norm"
      - "orig"
      - "count"
    StudyColumns:
      type: "object"
      properties:
        conditions:
          $ref: "#/components/shared/StringsColumn"
        interventions:
          $ref: "#/components/shared/InterventionsColumn"
        collaborators:
          $ref: "#/components/shared/StringsColumn"
    StringsColumn:
      type: "object"
      properties:
        total:
          $ref: "#/components/shared/uint"
        items:
          type: "array"
          items:
            type: "string"
      required:
      - "total"
      - "items"
    InterventionsColumn:
      type: "object"
      properties:
        total:
          $ref: "#/components/shared/uint"
        items:
          type: "array"
          items:
            $ref: "#/components/shared/InterventionsColumnItem"
      required:
      - "total"
      - "items"
    InterventionsColumnItem:
      type: "object"
      properties:
        type:
          $ref: "#/components/study/InterventionType"
        name:
          type: "string"
    ExtraHighlights:
      type: "object"
      properties:
        enums:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              $ref: "#/components/shared/nonEmptyString"
        numbers:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "number"
    Explanation:
      type: "object"
      properties:
        match:
          type: "boolean"
        value:
          type: "number"
        description:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/shared/Explanation"
      required:
      - "match"
      - "value"
      - "description"
    ProfileResults:
      type: "object"
      properties:
        preProcessTime:
          type: "string"
        elasticRequestTime:
          type: "string"
        elasticTookTime:
          type: "string"
        postProcessTime:
          type: "string"
        luceneQuery:
          type: "string"
        topQueryTime:
          type: "string"
        aggLuceneQuery:
          type: "string"
        aggTime:
          type: "string"
      required:
      - "preProcessTime"
      - "elasticRequestTime"
      - "elasticTookTime"
      - "postProcessTime"
    FieldValuesStatsList:
      type: "array"
      items:
        $ref: "#/components/shared/FieldValuesStats"
    FieldValuesStats:
      anyOf:
      - $ref: "#/components/schemas/EnumStats"
      - $ref: "#/components/schemas/StringStats"
      - $ref: "#/components/schemas/DateStats"
      - $ref: "#/components/schemas/IntegerStats"
      - $ref: "#/components/schemas/NumberStats"
      - $ref: "#/components/schemas/BooleanStats"
    nonEmptyString:
      type: "string"
      minLength: 1
      description: "non-empty string"
    nonEmptyStrings:
      type: "array"
      items:
        $ref: "#/components/shared/nonEmptyString"
    nct:
      type: "string"
      pattern: "NCT\\d{8}"
      description: "NCT Number (a.k.a. ClinicalTrials.gov Identifier)"
    uint:
      type: "integer"
      minimum: 0
      description: "non-negative integer"
    pint:
      type: "integer"
      minimum: 1
      description: "positive integer"
    Object:
      type: "object"
    BadRequestResponse:
      description: "Bad request"
      content:
        text/plain:
          schema:
            $ref: "#/components/shared/errorMessage"
            example: "Unknown field or area name: title"
    errorMessage:
      type: "string"
      description: "A text message describing an error"
externalDocs:
  description: "Introduction on beta.clinicaltrials.gov"
  url: "https://beta.clinicaltrials.gov/data-about-studies/learn-about-api"