servers:
  - url: https://api.llmtales.com
info:
  description: A server for playing small text based games. Logs each user and AI input.
  title: Games API
  version: "1.0"
openapi: 3.0.1
paths:
  /games/list:
    get:
      summary: List names of games that are available to play.
      operationId: listGames
      responses:
        default:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGamesResponse"
  /games/start:
    post:
      summary: Starts a game by sending up the name of the game to play.
      operationId: startGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameStartRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayGameResponse"
  /games/action:
    post:
      summary: Once a game has been started, register any input or output move generated by the user or the AI and returns with instructions. Requires the game_id gotten from start.
      operationId: registerAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameActionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayGameResponse"
components:
  schemas:
    GameStartRequest:
      type: object
      properties:
        game_name:
          type: string
          description: Starts a new game of the type game_name. Only used when creating new games. Don't include if custom game type.
        game_id:
          type: string
          description: The ID of the game (uuid) for the server if it's a custom game (previously provided from server).
    GameActionRequest:
      type: object
      properties:
        game_id:
          type: string
          description: The ID of the game (uuid) for the server.
        action:
          type: object
          description: "Required. The full text of the action that occurred. If it's a user input, it should be the full input. If it's the assistant/ai output, it should explain what the AI did."
          properties:
            role:
              type: string
              description: user (if by the user) or assistant (if by the ai)
            args:
              type: object
              description: any extra properties specific to the game
    ListGamesResponse:
      type: object
      properties:
        games:
          items:
            type: string
          type: array
        instructions:
          type: string
          description: What information to interpreted for the user
    PlayGameResponse:
      type: object
      properties:
        game_id:
          type: string
        instructions:
          type: string
          description: What information to interpreted for the user
