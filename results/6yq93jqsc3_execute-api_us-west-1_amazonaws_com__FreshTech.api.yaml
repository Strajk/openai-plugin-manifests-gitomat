openapi: 3.0.1
info:
  title: FreshTech
  description: >-
    This plugin is designed to fetch and present the most recent documentation
    data from specified source. It can be used to retrieve updated documentation
    for various software, libraries, or APIs. The plugin works by making a
    request to the documentation source, parsing the data, and then formatting
    it for display. To use this plugin effectively, consider specifying the type
    of documentation you're looking for and the source. For example, you could
    ask for 'latest Python documentation' or 'updated ReactJS API
    documentation'. The plugin will then fetch the relevant data and present it
    in a readable format. Please note that the length of the documentation data
    returned can vary significantly depending on the source and the specific
    request. Some documentation might be quite brief, while others could be very
    detailed and lengthy. Therefore, it's important to consider the context
    length when using this plugin. If the documentation data is too long, it
    might exceed the token limit for a single response. In such cases, you might
    need to ask for a specific part of the documentation or use follow-up
    prompts to view the rest of the data. Remember, the goal of this plugin is
    to provide you with the most recent and relevant documentation data. So,
    make sure to specify your requests clearly to get the best results
  version: v1
servers:
  - url: https://6yq93jqsc3.execute-api.us-west-1.amazonaws.com/
paths:
  docs:
    get:
      operationId: getUpdatedDocs
      summary: Returns the updated docs information
      parameters:
        - name: main-tech-name
          in: query
          required: true
          description: >-
            This parameter represents the main technology you are interested in.
            It should be the name of the technology, library, or framework you
            want to fetch information about. For example, if you are interested
            in React, you would set tech-name to "react". This parameter is
            case-insensitive.
          schema:
            type: string
        - name: filter
          in: query
          required: false
          description: >-
            This parameter is used to apply a filter to the data fetched based
            on the tech-name. It can be used to narrow down the information
            returned. For example, if you are interested in React with
            TypeScript, you would set tech-name to "react" and tech-filter to
            "typescript". This parameter is case-insensitive.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
