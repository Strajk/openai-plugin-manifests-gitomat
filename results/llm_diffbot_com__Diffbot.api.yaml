{"openapi":"3.0.2","info":{"title":"API for Diffbot's Knowledge Graph","description":"Search and find facts of organizations and people from Diffbot Knowledge Graph, and extract information from the Web using Diffbot API.","version":"0.1"},"paths":{"/chatgpt/v1/extract":{"get":{"tags":["chatgpt"],"summary":"Extract","description":"Extract the content from a given URL. Only call this endpoint if the user mentioned a URL.","operationId":"extraction_plugin_api_v1","parameters":[{"description":"URL of a web page.","required":false,"schema":{"title":"Page Url","type":"string","description":"URL of a web page."},"name":"page_url","in":"query"},{"required":false,"schema":{"title":"User-Agent","type":"string"},"name":"user-agent","in":"header"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/enhance":{"post":{"tags":["chatgpt"],"summary":"Enhance","description":"Call this endpoint when asked for information of Person or Organization. Must include name and type for all. Fill in location, job title and employer for Person, and homepage and location for Organization. Always fill extra_fields in the request with a list of valid fields, ignore invalid ones.","operationId":"enhance_plugin_api","parameters":[{"required":false,"schema":{"title":"User-Agent","type":"string"},"name":"user-agent","in":"header"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnhanceRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnhanceResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/text2dql":{"get":{"tags":["chatgpt"],"summary":"Text2Dql","description":"Accept the type of entities (Person or Organizatin) the query is looking for, and construct an instruction for the next step.","operationId":"text2dql_plugin_api","parameters":[{"description":"Query text from the user.","required":false,"schema":{"title":"Query","type":"string","description":"Query text from the user."},"name":"query","in":"query"},{"description":"Entity type: Organization, Person","required":false,"schema":{"title":"Type","type":"string","description":"Entity type: Organization, Person"},"name":"type","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Text2Dql Plugin Api","type":"string"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/query":{"get":{"tags":["chatgpt"],"summary":"Query","description":"Retrieve data about person or organization with the dql query language.","operationId":"query_plugin_api","parameters":[{"description":"Query text from the user.","required":false,"schema":{"title":"Query","type":"string","description":"Query text from the user."},"name":"query","in":"query"},{"description":"Diffbot Query Language translated from the query text.","required":false,"schema":{"title":"Dql Query","type":"string","description":"Diffbot Query Language translated from the query text."},"name":"dql_query","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"EnhanceInput":{"title":"EnhanceInput","required":["name"],"type":"object","properties":{"type":{"allOf":[{"$ref":"#/components/schemas/EntityType"}],"description":"Entity type: Organization, Person","default":"Organization"},"name":{"title":"Name","type":"string","description":"Name of the entity, can be used with types Person and Organization","example":"Diffbot"},"url":{"title":"Url","type":"string","description":"homepage URI of entity to enhance. Parameter can be used with types Person and Organization","example":"https://www.diffbot.com"},"location":{"title":"Location","type":"string","description":"Location of the entity","example":"Menlo Park"},"employer":{"title":"Employer","type":"string","description":"Employer of a person. Only used with type Person","example":"Diffbot"},"title":{"title":"Title","type":"string","description":"Title of a person. Only used with type Person","example":"CEO"},"extra_fields":{"title":"Extra Fields","anyOf":[{"type":"array","items":{"$ref":"#/components/schemas/EntityField"}},{"type":"string"}],"description":"A list of fields requested, values are from enum EntityField. Map them to valid fields in EntityField, otherwise don't include them. Only used with type Organization","example":["ceo","founders"]},"size":{"title":"Size","type":"integer","default":1}}},"EnhanceRequest":{"title":"EnhanceRequest","required":["request"],"type":"object","properties":{"request":{"title":"Request","type":"array","items":{"$ref":"#/components/schemas/EnhanceInput"}}}},"EnhanceResponse":{"title":"EnhanceResponse","required":["results"],"type":"object","properties":{"results":{"title":"Results","type":"array","items":{"$ref":"#/components/schemas/EnhanceResult"}}}},"EnhanceResult":{"title":"EnhanceResult","type":"object","properties":{"type":{"allOf":[{"$ref":"#/components/schemas/EntityType"}],"description":"Entity type: Organization, Person","default":"Organization"},"entity":{"title":"Entity"}}},"EntityField":{"title":"EntityField","enum":["boardMembers","ceo","competitors","customers","founders","investments","partnerships","subsidiaries","suppliers"],"description":"An enumeration."},"EntityType":{"title":"EntityType","enum":["Organization","Person"],"type":"string","description":"An enumeration."},"ExtractionResponse":{"title":"ExtractionResponse","type":"object","properties":{"type":{"title":"Type","type":"string"},"url":{"title":"Url","type":"string"},"title":{"title":"Title","type":"string"},"data":{"title":"Data"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"QueryResponse":{"title":"QueryResponse","type":"object","properties":{"hits":{"title":"Hits","type":"integer"},"data":{"title":"Data"},"instruction":{"title":"Instruction","type":"string"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}