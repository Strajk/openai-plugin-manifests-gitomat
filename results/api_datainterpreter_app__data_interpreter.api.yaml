{"components":{"schemas":{"availableSourcesResponse":{"properties":{"sources":{"description":"The list of sources available for querying data.","items":{"properties":{"data_type":{"description":"The type of data source.","type":"string"},"description":{"description":"The description of the data source.","type":"string"},"id":{"description":"The ID of the data source, used for querying it (only needed for the backend, the user doesn't need to know).","type":"string"},"name":{"description":"The name of the data source.","type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"getHelpResponse":{"properties":{"message":{"description":"The help text for the plugin.","type":"string"}},"type":"object"},"linkDBRequest":{"properties":{"db_string":{"description":"A string that can be used by psycopg2 to connect to the DB. It needs to be formatted dbtype://user:password@host:port/dbname","type":"string"},"name":{"description":"The name the user wants to db the sheet.","type":"string"},"purpose":{"description":"The purpose of the db; general description.","type":"string"}},"type":"object"},"linkDBResponse":{"properties":{"message":{"description":"The message to display to the user.","type":"string"}},"type":"object"},"linkSheetRequest":{"properties":{"name":{"description":"The name the user wants to give the sheet (ask the user if not provided).","type":"string"},"purpose":{"description":"The purpose of the sheet; general description.","type":"string"},"sheetURL":{"description":"The URL of the Google Sheet to link.","type":"string"}},"type":"object"},"linkSheetResponse":{"properties":{"filename":{"description":"The filename of the sheet.","type":"string"},"head":{"description":"Markdown of the header row of the sheet.","items":{"type":"string"},"type":"string"},"message":{"description":"The message to display to the user.","type":"string"}},"type":"object"},"manipulateSheetRequest":{"description":"The code to run in the Jupyter notebook cell.","properties":{"already_know_head":{"description":"Whether the head of the target sheets has already been analyzed. If this the first message, this is false and it needs to be run before any additional queries should be attempted.","type":"boolean"},"files_to_load":{"description":"IMPORTANT. Since this is being run on a remote server, the files must be uploaded from the user's local files. This is a comma separated list of filenames to load from the remote server to the local disk, if any. Names must match the names from get_available_sources.","type":"string"},"is_first_cell":{"description":"Whether this is the first cell to execute. (needed for preparing the notebook)","type":"boolean"},"plan":{"description":"IMPORTANT. Provide a step-by-step explanation of what query's going to be and how to troubleshoot.","type":"string"},"query":{"description":"The python pandas code to run in the notebook (the next cell to execute). This is being executed in a remote Jupyter notebook.\nYou should always start sessions by: - reading in any files that will be used - Getting the head or inspecting the data in some way - Troubleshooting errors\nPandas Updates: - append is deprecated, use concat instead\nIf there's issues with the data, work with the user to remove rows that are causing issues, clean the data, or otherwise get it into a shape that doesn't result in constant errors.\nWhen reading CSVs, if you don't know the character encoding, try to read with UTF first and fall back to ISO-8859-1 if that fails (just use try/except, same with other sorts of things; if there's ambiguous values try a few methods and see which one works and use that moving forward).\nTroubleshoot any issues by inspecting columns and data types with .info() and .head().\nUse coerce = true with numeric data to help it avoid erroring. Do not make subdirectories; everything should be in the root directory. Do not use F strings. Avoid using any sorts of quotes in your outputs - use <> instead of quotes to display messages. If something has failed multiple times, switch strategies.\nDeal with nan values before plotting data. ","type":"string"},"user_message":{"description":"(required) The user's original message.","type":"string"}},"type":"object"},"manipulateSheetResponse":{"properties":{"errors":{"description":"A list of uncaught exceptions that occurred while running the query.","items":{"description":"The error message.","type":"string"},"type":"array"},"exported_file_url":{"description":"The URL of the exported file if it was requested.","type":"string"},"image_urls":{"description":"The list of image URLs of the plots in PNG.","items":{"type":"string"},"type":"array"},"outputs":{"description":"A list of the outputs from running the query.","items":{"description":"The output of the query.","properties":{"type":{"description":"The type of the output.","type":"string"},"value":{"description":"The value of the output.","type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"queryDBRequest":{"properties":{"columnsToUse":{"description":"The columns to use in the query in table.column format. Query the tables first to see what columns are available.","items":{"type":"string"},"type":"array"},"data_source_id":{"description":"The ID of the data source to query, gotten from linking or listing available sources.","type":"string"},"explanation":{"description":"The explanation of the query that's going to be run. The query is called query.","type":"string"},"plotKwargs":{"description":"Whether to provide a plot of the query results. This will run from df.plot(**plotKwargs) on the results of the query.","type":"dict || null"},"query":{"description":"The query to run on the DB. It needs to be formatted as a valid SQL query.","type":"string"},"user_message":{"description":"(required) The user's original message.","type":"string"}},"summary":"The query will be run with psycopg2 so it needs to be formatted as a valid SQL query. Before querying tables, get the table schemas if it is the first time querying the table.","type":"object"},"queryDBResponse":{"properties":{"img_url":{"description":"The url of the plot if it was provided.","type":"string"},"message":{"description":"A message if the query was successful.","type":"string"},"response":{"description":"The response from the DB.","type":"string"}},"type":"object"},"useFileRequest":{"properties":{"filename":{"description":"The filename of the file to use.","type":"string"}},"type":"object"},"useFileResponse":{"properties":{"filename":{"description":"The filename of the sheet.","type":"string"},"head":{"description":"Markdown of the header row of the sheet.","items":{"type":"string"},"type":"string"},"message":{"description":"The message to display to the user.","type":"string"}},"type":"object"}}},"info":{"description":"Create conversations to explore data in spreadsheets, Google Sheets, and SQL databases.","title":"Data Interpreter","version":"v1"},"openapi":"3.0.1","paths":{"/api/who_am_i":{"get":{"operationId":"whoAmI","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/whoAmIResponse"}}},"description":"OK"}},"summary":"Provides email that the user is logged in as for managing their data."}},"/get_available_sources":{"get":{"operationId":"get_available_sources","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/availableSourcesResponse"}}},"description":"OK"}},"summary":"Provides the sources available for querying data."}},"/help":{"get":{"operationId":"get_dataInterpreter_instructions","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/getHelpResponse"}}},"description":"OK"}},"summary":"Provides instructions for how to use the plugin, for use when asked how to use it or other troubleshooting."}},"/link_db":{"post":{"operationId":"linkDB","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/linkDBRequest"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/linkDBResponse"}}},"description":"OK"}},"summary":"Add a doctring for a DB to the conversation. It will be used by psycopg2 to connect to the DB so needs to be formatted dbtype://user:password@host:port/dbname. The user should supply a name and description of what the database is for when linking it."}},"/link_sheet":{"post":{"operationId":"linkSheet","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/linkSheetRequest"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/linkSheetResponse"}}},"description":"OK"}},"summary":"Links a Google Sheet to a conversation."}},"/manipulate_sheet":{"post":{"operationId":"manipulateSheet","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/manipulateSheetRequest"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/manipulateSheetResponse"}}},"description":"OK"}},"summary":"Uses a Jupyter notebook to run any python code on any data. Inspect, edit, manipulate, download, and transform data. Can install pip packages with !pip install package_name."}},"/query_db":{"post":{"operationId":"queryDB","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/queryDBRequest"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/queryDBResponse"}}},"description":"OK"}},"summary":"Run a read-only query on a database."}},"/use_file":{"post":{"operationId":"useFile","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/useFileRequest"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/useFileResponse"}}},"description":"OK"}},"summary":"Ensures a file is usable for an operation. Needed before using it in /manipulate_sheet to ensure it's available."}}},"servers":[{"url":"https://api.datainterpreter.app/"}]}
